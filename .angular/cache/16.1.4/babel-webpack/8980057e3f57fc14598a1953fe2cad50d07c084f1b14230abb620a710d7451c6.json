{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../model/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction DashboardComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_15_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editUserData(user_r5));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteUserData(user_r5.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.email);\n  }\n}\nfunction DashboardComponent_div_31_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_31_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name should have a minimum of 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_31_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name should have a maximum of 30 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_31_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, DashboardComponent_div_31_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, DashboardComponent_div_31_div_3_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"maxlength\"));\n  }\n}\nfunction DashboardComponent_div_36_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_36_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Invalid email format. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_36_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, DashboardComponent_div_36_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.userForm.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.userForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction DashboardComponent_div_55_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_55_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name should have a minimum of 2 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_55_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Name should have a maximum of 30 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_55_div_1_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(2, DashboardComponent_div_55_div_2_Template, 2, 0, \"div\", 15);\n    i0.ɵɵtemplate(3, DashboardComponent_div_55_div_3_Template, 2, 0, \"div\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"maxlength\"));\n  }\n}\nfunction DashboardComponent_div_60_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_60_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Invalid email format. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_60_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵtemplate(2, DashboardComponent_div_60_div_2_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.userForm.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.userForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nexport class DashboardComponent {\n  constructor(userService, formBuilder, router) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.userObject = new User();\n    this.userList = [];\n  }\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    this.fetchUserData();\n  }\n  addUserData() {\n    this.userObject.name = this.userForm.value.name;\n    this.userObject.email = this.userForm.value.email;\n    console.log(this.userForm);\n    this.userService.addUserData(this.userObject).subscribe(res => {\n      this.fetchUserData();\n      console.log(\"Add User Data:\", res);\n    });\n  }\n  fetchUserData() {\n    this.userService.fetchUserData().subscribe(res => {\n      this.userList = Object.values(res);\n      console.log(\"Fetch User Data:\", res);\n    });\n  }\n  deleteUserData(id) {\n    this.userService.deleteUserData(id).subscribe(res => {\n      this.fetchUserData();\n      console.log(\"Delete User Data:\", res);\n    });\n  }\n  editUserData(user) {\n    this.userForm.patchValue({\n      id: user.id,\n      name: user.name,\n      email: user.email\n    });\n  }\n  updateUserData() {\n    this.userObject.id = this.userForm.value.id;\n    this.userObject.name = this.userForm.value.name;\n    this.userObject.email = this.userForm.value.email;\n    this.userService.updateUserData(this.userObject.id, this.userObject).subscribe(res => {\n      this.fetchUserData();\n      console.log('Update Data', res);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 66,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#addUser\", 1, \"btn\", \"btn-primary\"], [\"id\", \"addUser\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", \"placeholder\", \"Enter name\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"id\", \"editUser\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#editUser\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"User Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"table\", 1)(4, \"thead\")(5, \"tr\")(6, \"th\");\n      i0.ɵɵtext(7, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\");\n      i0.ɵɵtext(9, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, DashboardComponent_tr_15_Template, 12, 3, \"tr\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"button\", 3);\n      i0.ɵɵtext(17, \" Add User\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"div\", 6)(21, \"div\", 7)(22, \"h1\", 8);\n      i0.ɵɵtext(23, \"Add User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 10)(26, \"form\", 11)(27, \"div\", 12)(28, \"label\", 13);\n      i0.ɵɵtext(29, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 14);\n      i0.ɵɵtemplate(31, DashboardComponent_div_31_Template, 4, 3, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 12)(33, \"label\", 16);\n      i0.ɵɵtext(34, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 17);\n      i0.ɵɵtemplate(36, DashboardComponent_div_36_Template, 3, 2, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 18)(38, \"button\", 19);\n      i0.ɵɵtext(39, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 20);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_40_listener() {\n        return ctx.addUserData();\n      });\n      i0.ɵɵtext(41, \"Add User\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(42, \"div\", 21)(43, \"div\", 5)(44, \"div\", 6)(45, \"div\", 7)(46, \"h1\", 8);\n      i0.ɵɵtext(47, \"Edit User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"button\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"div\", 10)(50, \"form\", 11)(51, \"div\", 12)(52, \"label\", 13);\n      i0.ɵɵtext(53, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"input\", 14);\n      i0.ɵɵtemplate(55, DashboardComponent_div_55_Template, 4, 3, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(56, \"div\", 12)(57, \"label\", 16);\n      i0.ɵɵtext(58, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(59, \"input\", 17);\n      i0.ɵɵtemplate(60, DashboardComponent_div_60_Template, 3, 2, \"div\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"div\", 18)(62, \"button\", 19);\n      i0.ɵɵtext(63, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_64_listener() {\n        return ctx.updateUserData();\n      });\n      i0.ɵɵtext(65, \"Update\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_7_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_tr_15_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r8","user_r5","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","editUserData","DashboardComponent_tr_15_Template_button_click_10_listener","ctx_r9","deleteUserData","id","ɵɵadvance","ɵɵtextInterpolate","i_r6","name","email","ɵɵtemplate","DashboardComponent_div_31_div_1_Template","DashboardComponent_div_31_div_2_Template","DashboardComponent_div_31_div_3_Template","ɵɵproperty","tmp_0_0","ctx_r1","userForm","get","hasError","tmp_1_0","tmp_2_0","DashboardComponent_div_36_div_1_Template","DashboardComponent_div_36_div_2_Template","ctx_r2","DashboardComponent_div_55_div_1_Template","DashboardComponent_div_55_div_2_Template","DashboardComponent_div_55_div_3_Template","ctx_r3","DashboardComponent_div_60_div_1_Template","DashboardComponent_div_60_div_2_Template","ctx_r4","DashboardComponent","constructor","userService","formBuilder","router","userObject","userList","ngOnInit","group","required","minLength","maxLength","fetchUserData","addUserData","value","console","log","subscribe","res","Object","values","user","patchValue","updateUserData","ɵɵdirectiveInject","i1","UserService","i2","FormBuilder","i3","Router","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_tr_15_Template","ɵɵelement","DashboardComponent_div_31_Template","DashboardComponent_div_36_Template","DashboardComponent_Template_button_click_40_listener","DashboardComponent_div_55_Template","DashboardComponent_div_60_Template","DashboardComponent_Template_button_click_64_listener","invalid","touched","tmp_3_0","tmp_6_0","tmp_7_0"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\dashboard\\dashboard.component.ts","E:\\User_Management_System\\myApp\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  userForm !: FormGroup;\n  userObject: User = new User();\n  userList:any=[];\n\n  constructor(private userService: UserService,\n    private formBuilder: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      id:[''],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.fetchUserData();\n\n\n  }\n\n\n  addUserData() {\n    this.userObject.name=this.userForm.value.name;\n    this.userObject.email=this.userForm.value.email;\n\n    console.log(this.userForm);\n    this.userService.addUserData(this.userObject).subscribe((res)=>{\n      this.fetchUserData();\n      console.log(\"Add User Data:\",res);\n    });\n  }\n\n  fetchUserData(){\n    this.userService.fetchUserData().subscribe((res:any)=>{\n      this.userList=Object.values(res);\n      console.log(\"Fetch User Data:\",res);\n    });\n  }\n\n  deleteUserData(id:any){\n    this.userService.deleteUserData(id).subscribe((res)=>{\n      this.fetchUserData();\n      console.log(\"Delete User Data:\",res);\n    })\n  }\n\n\n  editUserData(user: User) {\n    this.userForm.patchValue({\n      id: user.id,\n      name: user.name,\n      email: user.email\n    });\n  }\n\n  \n  updateUserData(){\n    this.userObject.id=this.userForm.value.id;\n    this.userObject.name=this.userForm.value.name;\n    this.userObject.email=this.userForm.value.email;\n\n    this.userService.updateUserData(this.userObject.id,this.userObject).subscribe((res)=>{\n      this.fetchUserData();\n      console.log('Update Data',res);\n    })\n  }\n}\n","<div class=\"container\">\n    <h1>User Information</h1>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let user of userList; let i=index\">\n                <td>{{i+1}}</td>\n                <td>{{user.name}}</td>\n                <td>{{user.email}}</td>\n                <td>\n                    <button class=\"btn btn-outline-primary me-2\" data-bs-toggle=\"modal\" data-bs-target=\"#editUser\"\n                        (click)=\"editUserData(user)\">Edit</button>\n                    <button class=\"btn btn-outline-danger\" (click)=\"deleteUserData(user.id)\">Delete</button>\n                </td>\n            </tr>\n            <!-- Repeat the above <tr> for each user -->\n        </tbody>\n    </table>\n</div>\n\n\n<!-- Button trigger modal -->\n<button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addUser\">\n    Add User\n</button>\n\n<!-- Add UserModal -->\n<div class=\"modal fade\" id=\"addUser\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Add User</h1>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"userForm\">\n                    <div class=\"form-group\">\n                        <label for=\"password\">Name</label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n                            placeholder=\"Enter name\">\n                        <div *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.touched\">\n                            <div *ngIf=\"userForm.get('name')?.hasError('required')\">\n                                Name is required.\n                            </div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('minlength')\">\n                                Name should have a minimum of 2 characters.\n                            </div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('maxlength')\">\n                                Name should have a maximum of 30 characters.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"email\"\n                            placeholder=\"Enter email\">\n                        <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\">\n                            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.hasError('required')\">\n                                Email is required.\n                            </div>\n                            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.hasError('email')\">\n                                Invalid email format.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"userForm.invalid\"\n                            (click)=\"addUserData()\" data-bs-dismiss=\"modal\">Add User</button>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<!--Update Modal -->\n<div class=\"modal fade\" id=\"editUser\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Edit User</h1>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"userForm\">\n                    <div class=\"form-group\">\n                        <label for=\"password\">Name</label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n                            placeholder=\"Enter name\">\n\n                        <div *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.touched\">\n                            <div *ngIf=\"userForm.get('name')?.hasError('required')\">\n                                Name is required.\n                            </div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('minlength')\">\n                                Name should have a minimum of 2 characters.\n                            </div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('maxlength')\">\n                                Name should have a maximum of 30 characters.\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"email\"\n                            placeholder=\"Enter email\">\n                        <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\">\n                            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.hasError('required')\">\n                                Email is required.\n                            </div>\n                            <div class=\"text-danger\" *ngIf=\"userForm.get('email')?.hasError('email')\">\n                                Invalid email format.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"submit\" class=\"btn btn-success\" data-bs-dismiss=\"modal\"\n                            (click)=\"updateUserData()\" [disabled]=\"userForm.invalid\">Update</button>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
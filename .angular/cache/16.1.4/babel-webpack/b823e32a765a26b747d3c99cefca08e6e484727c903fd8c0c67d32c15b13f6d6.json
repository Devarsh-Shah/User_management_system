{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    // constructor(private http:HttpClient) { }\n    // getLoginData(){\n    //   return this.http.get('https://console.firebase.google.com/project/login-60de4/database/login-60de4-default-rtdb/data')\n    // }\n    this.apiUrl = 'https://login-60de4-default-rtdb.firebaseio.com';\n  }\n  fetchData() {\n    return this.http.get(`${this.apiUrl}/data.json`).pipe(map(res => {\n      const sign = [];\n      for (const key in res) {\n        if (res.hasOwnProperty(key)) {\n          sign.push({\n            ...res[key],\n            id: key\n          });\n        }\n      }\n      return sign;\n    }));\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","LoginService","constructor","http","apiUrl","fetchData","get","pipe","res","sign","key","hasOwnProperty","push","id","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // constructor(private http:HttpClient) { }\n\n  // getLoginData(){\n  //   return this.http.get('https://console.firebase.google.com/project/login-60de4/database/login-60de4-default-rtdb/data')\n  // }\n\n\n  private apiUrl = 'https://login-60de4-default-rtdb.firebaseio.com';\n\n  constructor(private http: HttpClient) { }\n\n  fetchData(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/data.json`).pipe(\n      map((res:any) => {\n        const sign=[];\n\n      for(const key in res){\n        if(res.hasOwnProperty(key))\n        {\n          sign.push({...res[key], id:key})\n        }\n      }\n      return sign;\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATxB;IAEA;IACA;IACA;IAGQ,KAAAC,MAAM,GAAG,iDAAiD;EAE1B;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,YAAY,CAAC,CAACG,IAAI,CACnDP,GAAG,CAAEQ,GAAO,IAAI;MACd,MAAMC,IAAI,GAAC,EAAE;MAEf,KAAI,MAAMC,GAAG,IAAIF,GAAG,EAAC;QACnB,IAAGA,GAAG,CAACG,cAAc,CAACD,GAAG,CAAC,EAC1B;UACED,IAAI,CAACG,IAAI,CAAC;YAAC,GAAGJ,GAAG,CAACE,GAAG,CAAC;YAAEG,EAAE,EAACH;UAAG,CAAC,CAAC;;;MAGpC,OAAOD,IAAI;IACX,CAAC,CAAC,CACH;EACH;;AA3BWR,YAAY,C;mBAAZA,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZhB,YAAY,C;SAAZA,YAAY;EAAAiB,OAAA,EAAZjB,YAAY,CAAAkB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
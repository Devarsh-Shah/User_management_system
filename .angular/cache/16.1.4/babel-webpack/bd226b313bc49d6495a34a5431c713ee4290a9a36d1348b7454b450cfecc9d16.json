{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    // constructor(private http:HttpClient) { }\n    // getLoginData(){\n    //   return this.http.get('https://console.firebase.google.com/project/login-60de4/database/login-60de4-default-rtdb/data')\n    // }\n    this.apiUrl = 'https://login-60de4-default-rtdb.firebaseio.com/data.json';\n  }\n  fetchData() {\n    return this.http.get(this.apiUrl).pipe(tap(response => {\n      console.log('Response:', response);\n    }), catchError(error => {\n      console.error('Error:', error);\n      return throwError(error);\n    }));\n  }\n}\nLoginService.ɵfac = function LoginService_Factory(t) {\n  return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n};\nLoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginService,\n  factory: LoginService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["throwError","catchError","tap","LoginService","constructor","http","apiUrl","fetchData","get","pipe","response","console","log","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  // constructor(private http:HttpClient) { }\n\n  // getLoginData(){\n  //   return this.http.get('https://console.firebase.google.com/project/login-60de4/database/login-60de4-default-rtdb/data')\n  // }\n\n\n  private apiUrl = 'https://login-60de4-default-rtdb.firebaseio.com/data.json';\n\nconstructor(private http: HttpClient) { }\n\nfetchData(): Observable<any> {\n  return this.http.get(this.apiUrl).pipe(\n    tap(response => {\n      console.log('Response:', response);\n    }),\n    catchError(error => {\n      console.error('Error:', error);\n      return throwError(error);\n    })\n  );\n\n}\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAOC,GAAG,QAAQ,gBAAgB;;;AAKrD,OAAM,MAAOC,YAAY;EAWzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATtB;IAEA;IACA;IACA;IAGQ,KAAAC,MAAM,GAAG,2DAA2D;EAEtC;EAExCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACpCP,GAAG,CAACQ,QAAQ,IAAG;MACbC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;IACpC,CAAC,CAAC,EACFT,UAAU,CAACY,KAAK,IAAG;MACjBF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9B,OAAOb,UAAU,CAACa,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EAEH;;AAxBaV,YAAY,C;mBAAZA,YAAY,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAZd,YAAY,C;SAAZA,YAAY;EAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;EAAAC,UAAA,EAFX;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
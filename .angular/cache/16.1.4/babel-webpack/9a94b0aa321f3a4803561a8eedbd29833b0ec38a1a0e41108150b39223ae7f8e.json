{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isAuthenticatedUser()) {\n      this.router.parseUrl('/login');\n      return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","next","state","isAuthenticatedUser","parseUrl","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\guard\\auth-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authService.isAuthenticatedUser()) {\n      this.router.parseUrl('/login');\n      return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\n"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExEC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAI,IAAI,CAACJ,WAAW,CAACK,mBAAmB,EAAE,EAAE;MAC1C,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,QAAQ,CAAC;MAC9B,OAAO,IAAI;KACZ,MAAM;MACL,OAAO,IAAI,CAACL,MAAM,CAACK,QAAQ,CAAC,QAAQ,CAAC;;EAEzC;;AAZWR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAATd,SAAS,C;SAATA,SAAS;EAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;EAAAC,UAAA,EAFR;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
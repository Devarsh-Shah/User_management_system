{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://user-e38c5-default-rtdb.firebaseio.com/user.json';\n  }\n  addUserData(body) {\n    return this.http.post(this.apiUrl, body);\n  }\n  fetchUserData() {\n    return this.http.get(this.apiUrl);\n  }\n  ongetSignupData() {\n    return this.http.get('https://user-e38c5-default-rtdb.firebaseio.com/user.json').pipe(map(res => {\n      const sign = [];\n      for (const key in res) {\n        if (res.hasOwnProperty(key)) {\n          console.log(\"service\", key);\n          sign.push({\n            ...res[key],\n            id: key\n          });\n        }\n      }\n      return sign;\n    }));\n  }\n  deleteUserData(id) {\n    return this.http.delete('https://user-e38c5-default-rtdb.firebaseio.com/user/' + id);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["map","UserService","constructor","http","apiUrl","addUserData","body","post","fetchUserData","get","ongetSignupData","pipe","res","sign","key","hasOwnProperty","console","log","push","id","deleteUserData","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {map} from 'rxjs'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http:HttpClient) { }\n\n  private apiUrl = 'https://user-e38c5-default-rtdb.firebaseio.com/user.json';\n\n  addUserData(body:any) {\n    return this.http.post(this.apiUrl,body);\n  }\n\n  fetchUserData(){\n    return this.http.get(this.apiUrl);\n  }\n\n  ongetSignupData(){\n    return this.http.get('https://user-e38c5-default-rtdb.firebaseio.com/user.json')\n    .pipe(map((res:any)=>{\n      const sign=[];\n\n      for(const key in res){\n        if(res.hasOwnProperty(key))\n        {\n          console.log(\"service\",key)\n          sign.push({...res[key], id:key})\n        }\n      }\n      return sign;\n    }))\n  }\n\n  deleteUserData(id:any){\n    return this.http.delete('https://user-e38c5-default-rtdb.firebaseio.com/user/'+id);\n  }\n}\n"],"mappings":"AAEA,SAAQA,GAAG,QAAO,MAAM;;;AAKxB,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAEhB,KAAAC,MAAM,GAAG,0DAA0D;EAFpC;EAIvCC,WAAWA,CAACC,IAAQ;IAClB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAC,IAAI,CAACH,MAAM,EAACE,IAAI,CAAC;EACzC;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,IAAI,CAACL,MAAM,CAAC;EACnC;EAEAM,eAAeA,CAAA;IACb,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAC,0DAA0D,CAAC,CAC/EE,IAAI,CAACX,GAAG,CAAEY,GAAO,IAAG;MACnB,MAAMC,IAAI,GAAC,EAAE;MAEb,KAAI,MAAMC,GAAG,IAAIF,GAAG,EAAC;QACnB,IAAGA,GAAG,CAACG,cAAc,CAACD,GAAG,CAAC,EAC1B;UACEE,OAAO,CAACC,GAAG,CAAC,SAAS,EAACH,GAAG,CAAC;UAC1BD,IAAI,CAACK,IAAI,CAAC;YAAC,GAAGN,GAAG,CAACE,GAAG,CAAC;YAAEK,EAAE,EAACL;UAAG,CAAC,CAAC;;;MAGpC,OAAOD,IAAI;IACb,CAAC,CAAC,CAAC;EACL;EAEAO,cAAcA,CAACD,EAAM;IACnB,OAAO,IAAI,CAAChB,IAAI,CAACkB,MAAM,CAAC,sDAAsD,GAACF,EAAE,CAAC;EACpF;;AAhCWlB,WAAW,C;mBAAXA,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXxB,WAAW,C;SAAXA,WAAW;EAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
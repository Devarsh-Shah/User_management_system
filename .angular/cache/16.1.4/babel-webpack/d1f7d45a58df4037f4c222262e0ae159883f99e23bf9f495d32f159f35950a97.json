{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password should have a minimum of 8 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 7);\n    i0.ɵɵtemplate(2, LoginComponent_div_12_div_2_Template, 2, 0, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"password\").hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loginForm.get(\"password\").hasError(\"minlength\"));\n  }\n}\nexport class LoginComponent {\n  constructor(loginService, formBuilder, router) {\n    this.loginService = loginService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  ngOnInit() {\n    this.fetchLoginData();\n  }\n  fetchLoginData() {\n    this.loginService.getLoginData().subscribe(res => {\n      this.getLoginData = res;\n      console.log(res);\n    });\n  }\n  checkLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n      if (this.getLoginData.email === email && this.getLoginData.password === password) {\n        this.router.navigateByUrl('dashboard');\n      } else {\n        console.log('Invalid credentials');\n      }\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_13_listener() {\n        return ctx.checkLogin();\n      });\n      i0.ɵɵtext(14, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").invalid && ctx.loginForm.get(\"password\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".card-login[_ngcontent-%COMP%] {\\n    border: 1px solid #ccc;\\n    border-radius: 8px;\\n    padding: 20px;\\n    max-width: 400px;\\n    margin: 0 auto;\\n    background-color: #fff;\\n  }\\n  \\n  .card-login[_ngcontent-%COMP%]   .card-title[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .card-login[_ngcontent-%COMP%]   .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n  }\\n  \\n  .card-login[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%] {\\n    border-radius: 4px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixjQUFjO0lBQ2Qsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkLWxvZ2luIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWF4LXdpZHRoOiA0MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtbG9naW4gLmNhcmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNhcmQtbG9naW4gLmZvcm0tZ3JvdXAgbGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5jYXJkLWxvZ2luIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gIH1cclxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_12_div_1_Template","LoginComponent_div_12_div_2_Template","ɵɵadvance","ɵɵproperty","ctx_r0","loginForm","get","hasError","LoginComponent","constructor","loginService","formBuilder","router","group","email","required","password","minLength","ngOnInit","fetchLoginData","getLoginData","subscribe","res","console","log","checkLogin","valid","value","navigateByUrl","ɵɵdirectiveInject","i1","LoginService","i2","FormBuilder","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","LoginComponent_div_12_Template","ɵɵlistener","LoginComponent_Template_button_click_13_listener","invalid","touched"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\login\\login.component.ts","E:\\User_Management_System\\myApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  getLoginData: any;\n\n  constructor(\n    private loginService: LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  ngOnInit() {\n    this.fetchLoginData();\n  }\n\n  fetchLoginData() {\n    this.loginService.getLoginData().subscribe((res) => {\n      this.getLoginData = res;\n      console.log(res);\n    });\n  }\n\n  checkLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n  \n      if (this.getLoginData.email === email && this.getLoginData.password === password) {\n        this.router.navigateByUrl('dashboard');\n      } else {\n        console.log('Invalid credentials');\n      }\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\n","<div class=\"container\">\n  <h1>Login</h1>\n  <form [formGroup]=\"loginForm\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email address</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"email\" placeholder=\"Enter email\">\n      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"password\" placeholder=\"Password\">\n\n      <div *ngIf=\"loginForm.get('password').invalid && loginForm.get('password').touched\">\n        <div *ngIf=\"loginForm.get('password').hasError('required')\">\n          Password is required.\n        </div>\n        <div *ngIf=\"loginForm.get('password').hasError('minlength')\">\n          Password should have a minimum of 8 characters.\n        </div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\" (click)=\"checkLogin()\">Login</button>\n  </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
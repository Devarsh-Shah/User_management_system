{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/auth.service\";\nimport * as i2 from \"../service/login.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\");\n    i0.ɵɵtext(2, \"Email is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_8_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\");\n    i0.ɵɵtext(2, \"Invalid email format.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_8_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, LoginComponent_div_8_div_2_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\");\n    i0.ɵɵtext(2, \"Password is required.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_13_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\");\n    i0.ɵɵtext(2, \"Password should have a minimum of 8 characters.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 3, 0, \"div\", 8);\n    i0.ɵɵtemplate(2, LoginComponent_div_13_div_2_Template, 3, 0, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n  }\n}\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"span\");\n    i0.ɵɵtext(2, \"Invalid credentials\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(authService, loginService, formBuilder, router) {\n    this.authService = authService;\n    this.loginService = loginService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.invalidCredential = false;\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  ngOnInit() {\n    this.fetchLoginData();\n  }\n  fetchLoginData() {\n    this.loginService.getLoginData().subscribe(res => {\n      this.getLoginData = res;\n      console.log(res);\n    });\n  }\n  checkLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n      // Add your authentication logic here\n      // For simplicity, we'll assume the login is successful if the email and password are non-empty\n      if (email && password) {\n        this.authService.login();\n        this.router.navigateByUrl('dashboard');\n      } else {\n        this.invalidCredential = true;\n        console.log('Invalid credentials');\n      }\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 17,\n  vars: 5,\n  consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 7);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 2, \"div\", 5);\n      i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_15_listener() {\n        return ctx.checkLogin();\n      });\n      i0.ɵɵtext(16, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.invalidCredential);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n\\n\\n.container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n  padding-top: 50px;\\n}\\n\\n.login-heading[_ngcontent-%COMP%] {\\n  color: #333 !important;\\n  text-align: center;\\n}\\n\\n.login-form[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa !important;\\n  padding: 30px;\\n  border-radius: 5px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  color: #333 !important;\\n}\\n\\n.error-message[_ngcontent-%COMP%] {\\n  margin-top: 5px;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  width: 100%;\\n  background-color: #007bff !important;\\n  border-color: #007bff !important;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0069d9 !important;\\n  border-color: #0062cc !important;\\n}\\n\\n.text-danger[_ngcontent-%COMP%] {\\n  color: #dc3545 !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw0RUFBNEU7O0FBRTVFO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLGFBQWE7RUFDYixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxvQ0FBb0M7RUFDcEMsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0Usb0NBQW9DO0VBQ3BDLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEFkZCB0aGUgZm9sbG93aW5nIENTUyB0byB5b3VyIHN0eWxlcy5jc3Mgb3IgY29tcG9uZW50LXNwZWNpZmljIENTUyBmaWxlICovXHJcblxyXG4uY29udGFpbmVyIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHBhZGRpbmctdG9wOiA1MHB4O1xyXG59XHJcblxyXG4ubG9naW4taGVhZGluZyB7XHJcbiAgY29sb3I6ICMzMzMgIWltcG9ydGFudDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5sb2dpbi1mb3JtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogMzBweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcblxyXG5sYWJlbCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgY29sb3I6ICMzMzMgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG5cclxuLmJ0bi1wcmltYXJ5IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMDA3YmZmICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjlkOSAhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1jb2xvcjogIzAwNjJjYyAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udGV4dC1kYW5nZXIge1xyXG4gIGNvbG9yOiAjZGMzNTQ1ICFpbXBvcnRhbnQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginComponent_div_8_div_1_Template","LoginComponent_div_8_div_2_Template","ɵɵadvance","ɵɵproperty","tmp_0_0","ctx_r0","loginForm","get","hasError","tmp_1_0","LoginComponent_div_13_div_1_Template","LoginComponent_div_13_div_2_Template","ctx_r1","LoginComponent","constructor","authService","loginService","formBuilder","router","invalidCredential","group","email","required","password","minLength","ngOnInit","fetchLoginData","getLoginData","subscribe","res","console","log","checkLogin","valid","value","login","navigateByUrl","ɵɵdirectiveInject","i1","AuthService","i2","LoginService","i3","FormBuilder","i4","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","LoginComponent_div_8_Template","LoginComponent_div_13_Template","LoginComponent_div_14_Template","ɵɵlistener","LoginComponent_Template_button_click_15_listener","invalid","touched","tmp_2_0"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\login\\login.component.ts","E:\\User_Management_System\\myApp\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  getLoginData: any;\n  invalidCredential:boolean=false;\n\n  constructor(\n    private authService: AuthService,\n    private loginService:LoginService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n\n  ngOnInit() {\n    this.fetchLoginData();\n  }\n\n  fetchLoginData() {\n    this.loginService.getLoginData().subscribe((res) => {\n      this.getLoginData = res;\n      console.log(res);\n    });\n  }\n\n  checkLogin() {\n    if (this.loginForm.valid) {\n      const email = this.loginForm.value.email;\n      const password = this.loginForm.value.password;\n\n      // Add your authentication logic here\n      // For simplicity, we'll assume the login is successful if the email and password are non-empty\n      if (email && password) {\n        this.authService.login();\n        this.router.navigateByUrl('dashboard');\n      } else {\n        this.invalidCredential = true;\n        console.log('Invalid credentials');\n      }\n    } else {\n      console.log('Form is invalid');\n    }\n  }\n}\n","<div class=\"container\">\n    <h1>Login</h1>\n    <form [formGroup]=\"loginForm\">\n        <div class=\"form-group\">\n            <label for=\"email\">Email address</label>\n            <input type=\"email\" class=\"form-control\" formControlName=\"email\" id=\"email\" placeholder=\"Enter email\">\n            <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\">\n                <div class=\"text-danger\" *ngIf=\"loginForm.get('email')?.hasError('required')\">\n                   <span>Email is required.</span> \n                </div>\n                <div class=\"text-danger\" *ngIf=\"loginForm.get('email')?.hasError('email')\">\n                   <span>Invalid email format.</span> \n                </div>\n            </div>\n\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" class=\"form-control\" formControlName=\"password\" id=\"password\" placeholder=\"Password\">\n\n            <div *ngIf=\"loginForm.get('password')?.invalid && loginForm.get('password')?.touched\">\n                <div class=\"text-danger\" *ngIf=\"loginForm.get('password')?.hasError('required')\">\n                   <span>Password is required.</span> \n                </div>\n                <div class=\"text-danger\" *ngIf=\"loginForm.get('password')?.hasError('minlength')\">\n                   <span>Password should have a minimum of 8 characters.</span>\n                </div>\n            </div>\n            <div class=\"text-danger\" *ngIf=\"invalidCredential\">\n                <span>Invalid credentials</span>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"loginForm.invalid\"\n            (click)=\"checkLogin()\">Login</button>\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
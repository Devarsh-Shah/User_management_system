{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { User } from '../model/user';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction DashboardComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_20_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.editUserData(user_r5));\n    });\n    i0.ɵɵtext(9, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_tr_20_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const user_r5 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.deleteUserData(user_r5.id));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r6 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r5.email);\n  }\n}\nfunction DashboardComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_34_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name should have a minimum of 2 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_34_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name should have a maximum of 30 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, DashboardComponent_div_34_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, DashboardComponent_div_34_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(3, DashboardComponent_div_34_div_3_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.userForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"maxlength\"));\n  }\n}\nfunction DashboardComponent_div_39_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_39_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, DashboardComponent_div_39_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, DashboardComponent_div_39_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.userForm.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.userForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nfunction DashboardComponent_div_58_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_58_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name should have a minimum of 2 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_58_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name should have a maximum of 30 characters.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, DashboardComponent_div_58_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, DashboardComponent_div_58_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(3, DashboardComponent_div_58_div_3_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"minlength\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r3.userForm.get(\"name\")) == null ? null : tmp_2_0.hasError(\"maxlength\"));\n  }\n}\nfunction DashboardComponent_div_63_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_63_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Invalid email format.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵtemplate(1, DashboardComponent_div_63_div_1_Template, 2, 0, \"div\", 34);\n    i0.ɵɵtemplate(2, DashboardComponent_div_63_div_2_Template, 2, 0, \"div\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.userForm.get(\"email\")) == null ? null : tmp_0_0.hasError(\"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r4.userForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"email\"));\n  }\n}\nexport class DashboardComponent {\n  constructor(userService, formBuilder, router) {\n    this.userService = userService;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.userObject = new User();\n    this.userList = [];\n  }\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      id: [''],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    this.fetchUserData();\n  }\n  //Purpose:For adding user details\n  addUserData() {\n    this.userObject.name = this.userForm.value.name;\n    this.userObject.email = this.userForm.value.email;\n    console.log(this.userForm);\n    this.userService.addUserData(this.userObject).subscribe(res => {\n      this.fetchUserData();\n      console.log(\"Add User Data:\", res);\n    });\n  }\n  //Purpose:For fetching user details\n  fetchUserData() {\n    this.userService.fetchUserData().subscribe(res => {\n      this.userList = Object.values(res);\n      console.log(\"Fetch User Data:\", res);\n    });\n  }\n  //Purpose:For deleting user details by id\n  deleteUserData(id) {\n    this.userService.deleteUserData(id).subscribe(res => {\n      this.fetchUserData();\n      console.log(\"Delete User Data:\", res);\n    });\n  }\n  //Purpose:For edding user details\n  editUserData(user) {\n    this.userForm.patchValue({\n      id: user.id,\n      name: user.name,\n      email: user.email\n    });\n  }\n  //Purpose:For updating user details\n  updateUserData() {\n    this.userObject.id = this.userForm.value.id;\n    this.userObject.name = this.userForm.value.name;\n    this.userObject.email = this.userForm.value.email;\n    this.userService.updateUserData(this.userObject.id, this.userObject).subscribe(res => {\n      this.fetchUserData();\n      console.log('Update Data', res);\n    });\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 69,\n  vars: 9,\n  consts: [[1, \"container\"], [1, \"card\"], [1, \"card-body\"], [1, \"login-heading\"], [\"type\", \"button\", \"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#addUser\", 1, \"btn\", \"btn-primary\", \"ml-auto\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\"], [2, \"width\", \"20%\"], [2, \"width\", \"25%\"], [\"colspan\", \"2\", 2, \"width\", \"30%\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"addUser\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\", \"card\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\", \"fs-5\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"name\", \"placeholder\", \"Enter name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"id\", \"editUser\", \"tabindex\", \"-1\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [1, \"modal-content\"], [\"type\", \"submit\", \"data-bs-dismiss\", \"modal\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [\"data-bs-toggle\", \"modal\", \"data-bs-target\", \"#editUser\", 1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-outline-danger\", 3, \"click\"], [1, \"text-danger\"], [4, \"ngIf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"User Information\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 4);\n      i0.ɵɵtext(6, \" Add User \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"table\", 6)(9, \"thead\")(10, \"tr\")(11, \"th\", 7);\n      i0.ɵɵtext(12, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 8);\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\", 8);\n      i0.ɵɵtext(16, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\", 9);\n      i0.ɵɵtext(18, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"tbody\");\n      i0.ɵɵtemplate(20, DashboardComponent_tr_20_Template, 12, 3, \"tr\", 10);\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(21, \"div\", 11)(22, \"div\", 12)(23, \"div\", 13)(24, \"div\", 14)(25, \"h1\", 15);\n      i0.ɵɵtext(26, \"Add User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"button\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 17)(29, \"form\", 18)(30, \"div\", 19)(31, \"label\", 20);\n      i0.ɵɵtext(32, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 21);\n      i0.ɵɵtemplate(34, DashboardComponent_div_34_Template, 4, 3, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 19)(36, \"label\", 23);\n      i0.ɵɵtext(37, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 24);\n      i0.ɵɵtemplate(39, DashboardComponent_div_39_Template, 3, 2, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 25)(41, \"button\", 26);\n      i0.ɵɵtext(42, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"button\", 27);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_43_listener() {\n        return ctx.addUserData();\n      });\n      i0.ɵɵtext(44, \"Add User\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(45, \"div\", 28)(46, \"div\", 12)(47, \"div\", 29)(48, \"div\", 14)(49, \"h1\", 15);\n      i0.ɵɵtext(50, \"Edit User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"button\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(52, \"div\", 17)(53, \"form\", 18)(54, \"div\", 19)(55, \"label\", 20);\n      i0.ɵɵtext(56, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(57, \"input\", 21);\n      i0.ɵɵtemplate(58, DashboardComponent_div_58_Template, 4, 3, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"div\", 19)(60, \"label\", 23);\n      i0.ɵɵtext(61, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(62, \"input\", 24);\n      i0.ɵɵtemplate(63, DashboardComponent_div_63_Template, 3, 2, \"div\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(64, \"div\", 25)(65, \"button\", 26);\n      i0.ɵɵtext(66, \"Close\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"button\", 30);\n      i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_67_listener() {\n        return ctx.updateUserData();\n      });\n      i0.ɵɵtext(68, \"Update\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_6_0;\n      let tmp_7_0;\n      i0.ɵɵadvance(20);\n      i0.ɵɵproperty(\"ngForOf\", ctx.userList);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.userForm.get(\"name\")) == null ? null : tmp_6_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.userForm.get(\"email\")) == null ? null : tmp_7_0.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", ctx.userForm.invalid);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    margin-top: 50px !important;\\n  }\\n  \\n  .card[_ngcontent-%COMP%] {\\n    border-radius: 10px !important;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1) !important;\\n  }\\n  \\n  .card-body[_ngcontent-%COMP%] {\\n    padding: 20px !important;\\n  }\\n  \\n  .login-heading[_ngcontent-%COMP%] {\\n    font-size: 24px !important;\\n    font-weight: bold !important;\\n    margin-bottom: 20px !important;\\n    text-align: center !important;\\n  }\\n  \\n  .table[_ngcontent-%COMP%] {\\n    width: 100% !important;\\n    margin-bottom: 0 !important;\\n  }\\n  \\n  .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n    vertical-align: middle;\\n  }\\n  \\n  .mb-3[_ngcontent-%COMP%] {\\n    margin-bottom: 1rem !important;\\n  }\\n  \\n  .mb-0[_ngcontent-%COMP%] {\\n    margin-bottom: 0 !important;\\n  }\\n  \\n  .table-responsive[_ngcontent-%COMP%] {\\n    overflow-x: auto;\\n  }\\n\\n  \\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksMkJBQTJCO0VBQzdCOztFQUVBO0lBQ0UsOEJBQThCO0lBQzlCLGtEQUFrRDtFQUNwRDs7RUFFQTtJQUNFLHdCQUF3QjtFQUMxQjs7RUFFQTtJQUNFLDBCQUEwQjtJQUMxQiw0QkFBNEI7SUFDNUIsOEJBQThCO0lBQzlCLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QiwyQkFBMkI7RUFDN0I7O0VBRUE7O0lBRUUsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsMkJBQTJCO0VBQzdCOztFQUVBO0lBQ0UsZ0JBQWdCO0VBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIC5jYXJkIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHggIWltcG9ydGFudDtcclxuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKSAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAuY2FyZC1ib2R5IHtcclxuICAgIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgLmxvZ2luLWhlYWRpbmcge1xyXG4gICAgZm9udC1zaXplOiAyNHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBmb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweCAhaW1wb3J0YW50O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIFxyXG4gIC50YWJsZSB7XHJcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAudGFibGUgdGgsXHJcbiAgLnRhYmxlIHRkIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgfVxyXG4gIFxyXG4gIC5tYi0zIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW0gIWltcG9ydGFudDtcclxuICB9XHJcbiAgXHJcbiAgLm1iLTAge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBcclxuICAudGFibGUtcmVzcG9uc2l2ZSB7XHJcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xyXG4gIH1cclxuXHJcbiAgXHJcbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","User","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","DashboardComponent_tr_20_Template_button_click_8_listener","restoredCtx","ɵɵrestoreView","_r8","user_r5","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","editUserData","DashboardComponent_tr_20_Template_button_click_10_listener","ctx_r9","deleteUserData","id","ɵɵadvance","ɵɵtextInterpolate","i_r6","name","email","ɵɵtemplate","DashboardComponent_div_34_div_1_Template","DashboardComponent_div_34_div_2_Template","DashboardComponent_div_34_div_3_Template","ɵɵproperty","tmp_0_0","ctx_r1","userForm","get","hasError","tmp_1_0","tmp_2_0","DashboardComponent_div_39_div_1_Template","DashboardComponent_div_39_div_2_Template","ctx_r2","DashboardComponent_div_58_div_1_Template","DashboardComponent_div_58_div_2_Template","DashboardComponent_div_58_div_3_Template","ctx_r3","DashboardComponent_div_63_div_1_Template","DashboardComponent_div_63_div_2_Template","ctx_r4","DashboardComponent","constructor","userService","formBuilder","router","userObject","userList","ngOnInit","group","required","minLength","maxLength","fetchUserData","addUserData","value","console","log","subscribe","res","Object","values","user","patchValue","updateUserData","ɵɵdirectiveInject","i1","UserService","i2","FormBuilder","i3","Router","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","DashboardComponent_tr_20_Template","ɵɵelement","DashboardComponent_div_34_Template","DashboardComponent_div_39_Template","DashboardComponent_Template_button_click_43_listener","DashboardComponent_div_58_Template","DashboardComponent_div_63_Template","DashboardComponent_Template_button_click_67_listener","invalid","touched","tmp_3_0","tmp_6_0","tmp_7_0"],"sources":["E:\\User_Management_System\\myApp\\src\\app\\dashboard\\dashboard.component.ts","E:\\User_Management_System\\myApp\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../service/user.service';\nimport { User } from '../model/user';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  userForm !: FormGroup;\n  userObject: User = new User();\n  userList:any=[];\n\n  constructor(private userService: UserService,\n    private formBuilder: FormBuilder,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      id:[''],\n      name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(30)]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n    this.fetchUserData();\n  }\n\n//Purpose:For adding user details\n  addUserData() {\n    this.userObject.name=this.userForm.value.name;\n    this.userObject.email=this.userForm.value.email;\n\n    console.log(this.userForm);\n    this.userService.addUserData(this.userObject).subscribe((res)=>{\n      this.fetchUserData();\n      console.log(\"Add User Data:\",res);\n    });\n  }\n\n//Purpose:For fetching user details\n  fetchUserData(){\n    this.userService.fetchUserData().subscribe((res:any)=>{\n      this.userList=Object.values(res);\n      console.log(\"Fetch User Data:\",res);\n    });\n  }\n\n\n//Purpose:For deleting user details by id\n  deleteUserData(id:any){\n    this.userService.deleteUserData(id).subscribe((res)=>{\n      this.fetchUserData();\n      console.log(\"Delete User Data:\",res);\n    })\n  }\n\n//Purpose:For edding user details\n  editUserData(user: User) {\n    this.userForm.patchValue({\n      id: user.id,\n      name: user.name,\n      email: user.email\n    });\n  }\n\n  \n//Purpose:For updating user details\n  updateUserData(){\n    this.userObject.id=this.userForm.value.id;\n    this.userObject.name=this.userForm.value.name;\n    this.userObject.email=this.userForm.value.email;\n\n    this.userService.updateUserData(this.userObject.id,this.userObject).subscribe((res)=>{\n      this.fetchUserData();\n      console.log('Update Data',res);\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h1 class=\"login-heading\">User Information</h1>\n            <button type=\"button\" class=\"btn btn-primary ml-auto\" data-bs-toggle=\"modal\" data-bs-target=\"#addUser\">\n                Add User\n            </button>\n            <div class=\"table-responsive\">\n                <table class=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th style=\"width: 20%;\">Id</th>\n                            <th style=\"width: 25%;\">Name</th>\n                            <th style=\"width: 25%;\">Email</th>\n                            <th style=\"width: 30%;\" colspan=\"2\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let user of userList; let i=index\">\n                            <td>{{i+1}}</td>\n                            <td>{{user.name}}</td>\n                            <td>{{user.email}}</td>\n                            <td>\n                                <button class=\"btn btn-outline-primary me-2\" data-bs-toggle=\"modal\"\n                                    data-bs-target=\"#editUser\" (click)=\"editUserData(user)\">Edit</button>\n                                <button class=\"btn btn-outline-danger\" (click)=\"deleteUserData(user.id)\">Delete</button>\n                            </td>\n                        </tr>\n                        <!-- Repeat the above <tr> for each user -->\n                    </tbody>\n                </table>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<!-- Button trigger modal -->\n<!-- <button type=\"button\" class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#addUser\">\n    Add User\n  </button> -->\n\n<!-- Add User Modal -->\n<!-- Add User Modal -->\n<div class=\"modal fade\" id=\"addUser\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content card\">\n            <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Add User</h1>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"userForm\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n                            placeholder=\"Enter name\">\n                        <div *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.touched\" class=\"text-danger\">\n                            <div *ngIf=\"userForm.get('name')?.hasError('required')\">Name is required.</div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('minlength')\">Name should have a minimum of 2\n                                characters.</div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('maxlength')\">Name should have a maximum of 30\n                                characters.</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\"\n                            placeholder=\"Enter email\">\n                        <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\"\n                            class=\"text-danger\">\n                            <div *ngIf=\"userForm.get('email')?.hasError('required')\">Email is required.</div>\n                            <div *ngIf=\"userForm.get('email')?.hasError('email')\">Invalid email format.</div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addUserData()\" data-bs-dismiss=\"modal\"\n                            [disabled]=\"userForm.invalid\">Add User</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<!-- Update Modal -->\n<div class=\"modal fade\" id=\"editUser\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Edit User</h1>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n            </div>\n            <div class=\"modal-body\">\n                <form [formGroup]=\"userForm\">\n                    <div class=\"form-group\">\n                        <label for=\"name\">Name</label>\n                        <input type=\"text\" formControlName=\"name\" class=\"form-control\" id=\"name\"\n                            placeholder=\"Enter name\">\n                        <div *ngIf=\"userForm.get('name')?.invalid && userForm.get('name')?.touched\" class=\"text-danger\">\n                            <div *ngIf=\"userForm.get('name')?.hasError('required')\">Name is required.</div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('minlength')\">Name should have a minimum of 2\n                                characters.</div>\n                            <div *ngIf=\"userForm.get('name')?.hasError('maxlength')\">Name should have a maximum of 30\n                                characters.</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\"\n                            placeholder=\"Enter email\">\n                        <div *ngIf=\"userForm.get('email')?.invalid && userForm.get('email')?.touched\"\n                            class=\"text-danger\">\n                            <div *ngIf=\"userForm.get('email')?.hasError('required')\">Email is required.</div>\n                            <div *ngIf=\"userForm.get('email')?.hasError('email')\">Invalid email format.</div>\n                        </div>\n                    </div>\n                    <div class=\"modal-footer\">\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                        <button type=\"submit\" class=\"btn btn-success\" (click)=\"updateUserData()\" data-bs-dismiss=\"modal\"\n                            [disabled]=\"userForm.invalid\">Update</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}